/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IMarketDescriptor,
  IMarketDescriptorInterface,
} from "../../../../contracts/core/interfaces/IMarketDescriptor";

const _abi = [
  {
    inputs: [],
    name: "SymbolAlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IMarketDescriptor__factory {
  static readonly abi = _abi;
  static createInterface(): IMarketDescriptorInterface {
    return new Interface(_abi) as IMarketDescriptorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IMarketDescriptor {
    return new Contract(address, _abi, runner) as unknown as IMarketDescriptor;
  }
}
