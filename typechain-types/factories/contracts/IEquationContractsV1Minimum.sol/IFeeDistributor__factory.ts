/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IFeeDistributor,
  IFeeDistributorInterface,
} from "../../../contracts/IEquationContractsV1Minimum.sol/IFeeDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "period",
        type: "uint16",
      },
    ],
    name: "InvalidLockupPeriod",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
    ],
    name: "InvalidNFTOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "period",
        type: "uint16",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IFeeDistributor__factory {
  static readonly abi = _abi;
  static createInterface(): IFeeDistributorInterface {
    return new Interface(_abi) as IFeeDistributorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IFeeDistributor {
    return new Contract(address, _abi, runner) as unknown as IFeeDistributor;
  }
}
