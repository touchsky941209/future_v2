/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IFarmRewardDistributorV2,
  IFarmRewardDistributorV2Interface,
} from "../../../contracts/IEquationContractsV1Minimum.sol/IFarmRewardDistributorV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "lockupFreeRate",
        type: "uint32",
      },
    ],
    name: "InvalidLockupFreeRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
    ],
    name: "InvalidNonce",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rewardType",
        type: "uint16",
      },
    ],
    name: "InvalidRewardType",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "collector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "CollectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "rewardType",
        type: "uint16",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "referralToken",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "nonce",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint200",
        name: "amount",
        type: "uint200",
      },
    ],
    name: "RewardCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint16",
        name: "period",
        type: "uint16",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lockedOrUnlockedAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "burnedAmount",
        type: "uint256",
      },
    ],
    name: "RewardLockedAndBurned",
    type: "event",
  },
  {
    inputs: [],
    name: "EFC",
    outputs: [
      {
        internalType: "contract IEFC",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "PackedValue",
        name: "nonceAndLockupPeriod",
        type: "uint256",
      },
      {
        internalType: "PackedValue[]",
        name: "packedPoolRewardValues",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "collectBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeDistributor",
    outputs: [
      {
        internalType: "contract IFeeDistributor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "lockupPeriod",
        type: "uint16",
      },
    ],
    name: "lockupFreeRates",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "rewardType",
        type: "uint16",
      },
    ],
    name: "rewardTypesDescriptions",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IFarmRewardDistributorV2__factory {
  static readonly abi = _abi;
  static createInterface(): IFarmRewardDistributorV2Interface {
    return new Interface(_abi) as IFarmRewardDistributorV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IFarmRewardDistributorV2 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IFarmRewardDistributorV2;
  }
}
