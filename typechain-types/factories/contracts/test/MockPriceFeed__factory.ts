/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockPriceFeed,
  MockPriceFeedInterface,
} from "../../../contracts/test/MockPriceFeed";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "",
        type: "address",
      },
    ],
    name: "getMaxPriceX96",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "",
        type: "address",
      },
    ],
    name: "getMinPriceX96",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPriceX96",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minPriceX96",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "_maxPriceX96",
        type: "uint160",
      },
    ],
    name: "setMaxPriceX96",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "_minPriceX96",
        type: "uint160",
      },
    ],
    name: "setMinPriceX96",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576102f3908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c9081631b468b451461026f5750806377c2fdc2146102125780639fae7541146101b3578063ac29ec8e14610136578063dadb493a146100e45763ea5aa01a1461006357600080fd5b346100e15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e15760043573ffffffffffffffffffffffffffffffffffffffff81168091036100dd577fffffffffffffffffffffffff000000000000000000000000000000000000000082541617815580f35b5080fd5b80fd5b50346100e157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e157602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b50346100e15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e15760043573ffffffffffffffffffffffffffffffffffffffff81168091036100dd577fffffffffffffffffffffffff0000000000000000000000000000000000000000600154161760015580f35b50346100e15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e15773ffffffffffffffffffffffffffffffffffffffff600435818116036100dd5760209060015416604051908152f35b50346100e15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e15773ffffffffffffffffffffffffffffffffffffffff600435818116036100dd576020915416604051908152f35b9050346100dd57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100dd5773ffffffffffffffffffffffffffffffffffffffff60209254168152f3fea2646970667358221220ff3984de05b4880d962c41d54012756f5934d366fa59e0c53e2efa2f7d80375c64736f6c63430008170033";

type MockPriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockPriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockPriceFeed__factory extends ContractFactory {
  constructor(...args: MockPriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockPriceFeed & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockPriceFeed__factory {
    return super.connect(runner) as MockPriceFeed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPriceFeedInterface {
    return new Interface(_abi) as MockPriceFeedInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockPriceFeed {
    return new Contract(address, _abi, runner) as unknown as MockPriceFeed;
  }
}
