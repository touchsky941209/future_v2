/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PriceFeed,
  PriceFeedInterface,
} from "../../../contracts/oracle/PriceFeed";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IChainLinkAggregator",
        name: "_stableMarketPriceFeed",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_stableMarketPriceFeedHeartBeatDuration",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "_ignoreReferencePriceFeedError",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Forbidden",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sequencerUptime",
        type: "uint256",
      },
    ],
    name: "GracePeriodNotOver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "referencePrice",
        type: "int256",
      },
    ],
    name: "InvalidReferencePrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "stableMarketPrice",
        type: "int256",
      },
    ],
    name: "InvalidStableMarketPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "InvalidUpdateTimestamp",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "ReferencePriceFeedNotSet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "elapsed",
        type: "uint256",
      },
    ],
    name: "ReferencePriceTimeout",
    type: "error",
  },
  {
    inputs: [],
    name: "SequencerDown",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "elapsed",
        type: "uint256",
      },
    ],
    name: "StableMarketPriceTimeout",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousGov",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newGov",
        type: "address",
      },
    ],
    name: "ChangeGovStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousGov",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newGov",
        type: "address",
      },
    ],
    name: "GovChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IMarketDescriptor",
        name: "market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint160",
        name: "priceX96",
        type: "uint160",
      },
      {
        indexed: false,
        internalType: "uint160",
        name: "refPriceX96",
        type: "uint160",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "cumulativeDelta",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "cumulativeRefDelta",
        type: "uint64",
      },
    ],
    name: "MaxCumulativeDeltaDiffExceeded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IMarketDescriptor",
        name: "market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint160",
        name: "priceX96",
        type: "uint160",
      },
      {
        indexed: false,
        internalType: "uint160",
        name: "minPriceX96",
        type: "uint160",
      },
      {
        indexed: false,
        internalType: "uint160",
        name: "maxPriceX96",
        type: "uint160",
      },
    ],
    name: "PriceUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "DELTA_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GRACE_PERIOD_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MARKET_DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USD_DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptGov",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IMarketDescriptor",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint160",
            name: "priceX96",
            type: "uint160",
          },
        ],
        internalType: "struct IPriceFeed.MarketPrice[]",
        name: "_marketPrices",
        type: "tuple[]",
      },
    ],
    name: "calculatePriceX96s",
    outputs: [
      {
        internalType: "uint160[]",
        name: "minPriceX96s",
        type: "uint160[]",
      },
      {
        internalType: "uint160[]",
        name: "maxPriceX96s",
        type: "uint160[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newGov",
        type: "address",
      },
    ],
    name: "changeGov",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "_market",
        type: "address",
      },
    ],
    name: "getMaxPriceX96",
    outputs: [
      {
        internalType: "uint160",
        name: "priceX96",
        type: "uint160",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "_market",
        type: "address",
      },
    ],
    name: "getMinPriceX96",
    outputs: [
      {
        internalType: "uint160",
        name: "priceX96",
        type: "uint160",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ignoreReferencePriceFeedError",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "isUpdater",
    outputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "market",
        type: "address",
      },
    ],
    name: "latestPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "updateTimestamp",
            type: "uint64",
          },
          {
            internalType: "uint160",
            name: "maxPriceX96",
            type: "uint160",
          },
          {
            internalType: "uint160",
            name: "minPriceX96",
            type: "uint160",
          },
          {
            internalType: "uint64",
            name: "updateBlockTimestamp",
            type: "uint64",
          },
        ],
        internalType: "struct IPriceFeed.PricePack",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "market",
        type: "address",
      },
    ],
    name: "marketConfig",
    outputs: [
      {
        components: [
          {
            internalType: "contract IChainLinkAggregator",
            name: "refPriceFeed",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "refHeartbeatDuration",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "maxCumulativeDeltaDiff",
            type: "uint64",
          },
        ],
        internalType: "struct IPriceFeed.MarketConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingGov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sequencerUptimeFeed",
    outputs: [
      {
        internalType: "contract IChainLinkAggregator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_cumulativeRoundDuration",
        type: "uint32",
      },
    ],
    name: "setCumulativeRoundDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "_market",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_maxCumulativeDeltaDiff",
        type: "uint64",
      },
    ],
    name: "setMaxCumulativeDeltaDiffs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_maxDeviationRatio",
        type: "uint32",
      },
    ],
    name: "setMaxDeviationRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IMarketDescriptor",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint160",
            name: "priceX96",
            type: "uint160",
          },
        ],
        internalType: "struct IPriceFeed.MarketPrice[]",
        name: "_marketPrices",
        type: "tuple[]",
      },
    ],
    name: "setPriceX96s",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "_market",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_duration",
        type: "uint32",
      },
    ],
    name: "setRefHeartbeatDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_refPriceExtraSample",
        type: "uint32",
      },
    ],
    name: "setRefPriceExtraSample",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "_market",
        type: "address",
      },
      {
        internalType: "contract IChainLinkAggregator",
        name: "_priceFeed",
        type: "address",
      },
    ],
    name: "setRefPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IChainLinkAggregator",
        name: "_sequencerUptimeFeed",
        type: "address",
      },
    ],
    name: "setSequencerUptimeFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IChainLinkAggregator",
        name: "_stableMarketPriceFeed",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_stableMarketPriceFeedHeartBeatDuration",
        type: "uint32",
      },
    ],
    name: "setStableMarketPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_updateTxTimeout",
        type: "uint32",
      },
    ],
    name: "setUpdateTxTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_active",
        type: "bool",
      },
    ],
    name: "setUpdater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slot",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "maxDeviationRatio",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cumulativeRoundDuration",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "refPriceExtraSample",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "updateTxTimeout",
            type: "uint32",
          },
        ],
        internalType: "struct IPriceFeed.Slot",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stableMarketPriceFeed",
    outputs: [
      {
        internalType: "contract IChainLinkAggregator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stableMarketPriceFeedHeartBeatDuration",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03461011857601f61156138819003918201601f19168301916001600160401b0383118484101761011d578084926060946040528339810103126101185780516001600160a01b0391828216918290036101185760208101519063ffffffff821682036101185760400151918215158303610118576000543360018060a01b0319821617600055604051943391167f3d1e4c3a68fed9f4f8315582b7297cf8fa264bc8e6704287603ba8c72bf05ac2600080a360048054600167ffffffff0000000160401b0319166c3c000000000000003c000186a0179055600280546001600160c01b0319169190911760a09290921b63ffffffff60a01b1691909117905560805261142d908161013482396080518161077c0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b600092833560e01c9182630ab064c9146110ed5750816312d43a511461109c5781631a15339114610ffe5781631a840aa914610ea05781631a88bc6614610e0c5781632524081014610db95781632f6ee69514610d7f5781632fe769af14610d39578163320e893314610cc857816339105c0714610c8c5781634fdfb08614610c2557816350eac0da14610ba857816353084eff14610ae2578163569a4eb314610a375781635b8132a9146109e45781636658fc0b146109625781636f1e6d18146108af57816375307f851461081157816377c2fdc2146107a157816379a866cf146107465781637a0a2f06146106825781637bc6729b146105a757816381a397e4146104e95781639fae754114610452578163a7264705146103ff578163a962ef1e14610352578163b8f44963146102cd578163d964924f1461025357508063ec6c39da146101ac5763ed2f86031461016f57600080fd5b346101a857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a857602090516107088152f35b5080fd5b50346101a8576101bb3661114e565b92906101c684611334565b936101d081611334565b925b81811061020557505050610201906101f383519484869586528501906111df565b9083820360208501526111df565b0390f35b8061021e60206102186001948688611229565b01611268565b73ffffffffffffffffffffffffffffffffffffffff61023d838a611398565b911680915261024c8287611398565b52016101d2565b8390346101a85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a85761028c6111b9565b6102946113ac565b7fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff67ffffffff0000000083549260201b16911617905580f35b833461034f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261034f5773ffffffffffffffffffffffffffffffffffffffff61031a611126565b6103226113ac565b167fffffffffffffffffffffffff0000000000000000000000000000000000000000600354161760035580f35b80fd5b833461034f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261034f5761038a611126565b6103926113ac565b73ffffffffffffffffffffffffffffffffffffffff80911690817fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001558254167fb9911e2099e372c216862258dc462bb65da46a2c854536c8b1acae619d0d62ed8380a380f35b5050346101a857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a85760209073ffffffffffffffffffffffffffffffffffffffff600354169051908152f35b82843461034f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261034f578173ffffffffffffffffffffffffffffffffffffffff91826104a3611126565b16815260076020522054821c169081156104c1576020925051908152f35b9050517f87138d5c000000000000000000000000000000000000000000000000000000008152fd5b5050346101a85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a857908167ffffffffffffffff606093610530611126565b93808261053b6112d8565b828152826020820152015273ffffffffffffffffffffffffffffffffffffffff80951681526006602052209261056f6112d8565b93549081169384815263ffffffff90846020820191838560a01c168352019260c01c8352845195865251166020850152511690820152f35b9190503461067e57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261067e576001549173ffffffffffffffffffffffffffffffffffffffff9182841633036106585750507fffffffffffffffffffffffff0000000000000000000000000000000000000000809216600155825491339083161783553391167f3d1e4c3a68fed9f4f8315582b7297cf8fa264bc8e6704287603ba8c72bf05ac28380a380f35b517fee90c468000000000000000000000000000000000000000000000000000000008152fd5b8280fd5b5050346101a857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a8576106ba611126565b906024359167ffffffffffffffff831683036107425773ffffffffffffffffffffffffffffffffffffffff906106ee6113ac565b168352600660205282209077ffffffffffffffffffffffffffffffffffffffffffffffff7fffffffffffffffff00000000000000000000000000000000000000000000000083549260c01b16911617905580f35b8380fd5b5050346101a857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a857602090517f000000000000000000000000000000000000000000000000000000000000000015158152f35b82843461034f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261034f5760018273ffffffffffffffffffffffffffffffffffffffff92836107f4611126565b1681526007602052200154169081156104c1576020925051908152f35b5050346101a857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a857610849611126565b906024359173ffffffffffffffffffffffffffffffffffffffff908184168094036108ab576108766113ac565b16835260066020528220907fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905580f35b8480fd5b5050346101a857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a8576108e7611126565b9073ffffffffffffffffffffffffffffffffffffffff6109056111cc565b9261090e6113ac565b16835260066020528220907fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff77ffffffff000000000000000000000000000000000000000083549260a01b16911617905580f35b8390346101a85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a85761099b6111b9565b6109a36113ac565b7fffffffffffffffffffffffffffffffff00000000ffffffffffffffffffffffff6fffffffff00000000000000000000000083549260601b16911617905580f35b5050346101a857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a85760209073ffffffffffffffffffffffffffffffffffffffff600254169051908152f35b5050346101a8577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261034f57610a6e611126565b610a766111cc565b90610a7f6113ac565b7fffffffffffffffff00000000000000000000000000000000000000000000000077ffffffff000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff60025493169360a01b169116171760025580f35b5050346101a85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a8579081608092610b20611126565b92610b296112f8565b5073ffffffffffffffffffffffffffffffffffffffff809416815260076020522091610b53611289565b9183549167ffffffffffffffff9381600186861697888452826020850197871c168752015494866060868501948489168652019660a01c16865284519788525116602087015251169084015251166060820152f35b9190503461067e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261067e577fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff6bffffffff0000000000000000610c106111b9565b610c186113ac565b8454931b16911617905580f35b5050346101a85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a85760ff8160209373ffffffffffffffffffffffffffffffffffffffff610c79611126565b1681526005855220541690519015158152f35b5050346101a857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a85760209051620f42408152f35b8390346101a85760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a85763ffffffff610d066111b9565b610d0e6113ac565b167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000082541617905580f35b5050346101a857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a85760209063ffffffff60025460a01c169051908152f35b5050346101a857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a8576020905160068152f35b5050346101a857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a85760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b9190503461067e57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261067e5760809250610e496112f8565b50610e52611289565b915463ffffffff9182808316948581528160208201818660201c168152816060868501948289891c168652019660601c16865284519788525116602087015251169084015251166060820152f35b9190503461067e57610eb13661114e565b9290338552602091600560205260ff848720541615610fd75750845b848110610ed8578580f35b610ee783610218838886611229565b90610ef3818785611229565b3573ffffffffffffffffffffffffffffffffffffffff808216809203610fd35760607f26784e8f4caa01c817f86c5ff01b3df365fcc75ecc246df6ed9fda9ad7b1762c91600195848c5260078952898c209087820192811692837fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fffffffff0000000000000000000000000000000000000000ffffffffffffffff7bffffffffffffffffffffffffffffffffffffffff00000000000000008354928d1b169116179055885190808252808983015289820152a201610ecd565b8880fd5b83517fee90c468000000000000000000000000000000000000000000000000000000008152fd5b5050346101a857807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a857611036611126565b90602435918215158093036107425773ffffffffffffffffffffffffffffffffffffffff906110636113ac565b168352600560205282209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00835416911617905580f35b5050346101a857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a85773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b8490346101a857817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a85780601260209252f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361114957565b600080fd5b9060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8301126111495760043567ffffffffffffffff9283821161114957806023830112156111495781600401359384116111495760248460061b83010111611149576024019190565b6004359063ffffffff8216820361114957565b6024359063ffffffff8216820361114957565b90815180825260208080930193019160005b8281106111ff575050505090565b835173ffffffffffffffffffffffffffffffffffffffff16855293810193928101926001016111f1565b91908110156112395760061b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b3573ffffffffffffffffffffffffffffffffffffffff811681036111495790565b604051906080820182811067ffffffffffffffff8211176112a957604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051906060820182811067ffffffffffffffff8211176112a957604052565b611300611289565b9060008252600060208301526000604083015260006060830152565b67ffffffffffffffff81116112a95760051b60200190565b9061133e8261131c565b604051907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090601f018116820167ffffffffffffffff8111838210176112a95760405283825261138e829461131c565b0190602036910137565b80518210156112395760209160051b010190565b73ffffffffffffffffffffffffffffffffffffffff6000541633036113cd57565b60046040517fee90c468000000000000000000000000000000000000000000000000000000008152fdfea2646970667358221220a1266e33ac83a8fb7c842b4049b367f9679526a156e47c7a491ba0db1a0917c064736f6c63430008170033";

type PriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PriceFeed__factory extends ContractFactory {
  constructor(...args: PriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _stableMarketPriceFeed: AddressLike,
    _stableMarketPriceFeedHeartBeatDuration: BigNumberish,
    _ignoreReferencePriceFeedError: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _stableMarketPriceFeed,
      _stableMarketPriceFeedHeartBeatDuration,
      _ignoreReferencePriceFeedError,
      overrides || {}
    );
  }
  override deploy(
    _stableMarketPriceFeed: AddressLike,
    _stableMarketPriceFeedHeartBeatDuration: BigNumberish,
    _ignoreReferencePriceFeedError: boolean,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _stableMarketPriceFeed,
      _stableMarketPriceFeedHeartBeatDuration,
      _ignoreReferencePriceFeedError,
      overrides || {}
    ) as Promise<
      PriceFeed & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PriceFeed__factory {
    return super.connect(runner) as PriceFeed__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceFeedInterface {
    return new Interface(_abi) as PriceFeedInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PriceFeed {
    return new Contract(address, _abi, runner) as unknown as PriceFeed;
  }
}
