/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ConfigurableUtil,
  ConfigurableUtilInterface,
} from "../../../contracts/libraries/ConfigurableUtil";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "protocolFeeRate",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "referralReturnFeeRate",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "referralParentReturnFeeRate",
        type: "uint32",
      },
    ],
    name: "InvalidFeeRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "interestRate",
        type: "uint32",
      },
    ],
    name: "InvalidInterestRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "invalidLiquidationFeeRatePerLiquidityPosition",
        type: "uint32",
      },
    ],
    name: "InvalidLiquidationFeeRatePerLiquidityPosition",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "liquidationFeeRatePerPosition",
        type: "uint32",
      },
    ],
    name: "InvalidLiquidationFeeRatePerPosition",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "liquidationVertexIndex",
        type: "uint8",
      },
    ],
    name: "InvalidLiquidationVertexIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "maxFundingRate",
        type: "uint32",
      },
    ],
    name: "InvalidMaxFundingRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "maxLeveragePerLiquidityPosition",
        type: "uint32",
      },
    ],
    name: "InvalidMaxLeveragePerLiquidityPosition",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "maxLeveragePerPosition",
        type: "uint32",
      },
    ],
    name: "InvalidMaxLeveragePerPosition",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "maxPositionLiquidity",
        type: "uint128",
      },
    ],
    name: "InvalidMaxPositionLiquidity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "maxPositionValueRate",
        type: "uint32",
      },
    ],
    name: "InvalidMaxPositionValueRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "maxPriceImpactLiquidity",
        type: "uint128",
      },
    ],
    name: "InvalidMaxPriceImpactLiquidity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "maxSizeRatePerPosition",
        type: "uint32",
      },
    ],
    name: "InvalidMaxSizeRatePerPosition",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "protocolFeeRate",
        type: "uint32",
      },
    ],
    name: "InvalidProtocolFeeRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "referralDiscountRate",
        type: "uint32",
      },
    ],
    name: "InvalidReferralDiscountRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "referralParentReturnFeeRate",
        type: "uint32",
      },
    ],
    name: "InvalidReferralParentReturnFeeRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "referralReturnFeeRate",
        type: "uint32",
      },
    ],
    name: "InvalidReferralReturnFeeRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "tradingFeeRate",
        type: "uint32",
      },
    ],
    name: "InvalidTradingFeeRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
    ],
    name: "InvalidVertex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredLength",
        type: "uint256",
      },
    ],
    name: "InvalidVerticesLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "market",
        type: "address",
      },
    ],
    name: "MarketAlreadyEnabled",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "market",
        type: "address",
      },
    ],
    name: "MarketNotEnabled",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IMarketDescriptor",
        name: "market",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "minMarginPerLiquidityPosition",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "maxLeveragePerLiquidityPosition",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "liquidationFeeRatePerLiquidityPosition",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "minMarginPerPosition",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "maxLeveragePerPosition",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "liquidationFeeRatePerPosition",
            type: "uint32",
          },
          {
            internalType: "uint128",
            name: "maxPositionLiquidity",
            type: "uint128",
          },
          {
            internalType: "uint32",
            name: "maxPositionValueRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxSizeRatePerPosition",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "liquidationExecutionFee",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "interestRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxFundingRate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct IConfigurable.MarketBaseConfig",
        name: "newCfg",
        type: "tuple",
      },
    ],
    name: "MarketBaseConfigChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IMarketDescriptor",
        name: "market",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "minMarginPerLiquidityPosition",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "maxLeveragePerLiquidityPosition",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "liquidationFeeRatePerLiquidityPosition",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "minMarginPerPosition",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "maxLeveragePerPosition",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "liquidationFeeRatePerPosition",
            type: "uint32",
          },
          {
            internalType: "uint128",
            name: "maxPositionLiquidity",
            type: "uint128",
          },
          {
            internalType: "uint32",
            name: "maxPositionValueRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxSizeRatePerPosition",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "liquidationExecutionFee",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "interestRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "maxFundingRate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct IConfigurable.MarketBaseConfig",
        name: "baseCfg",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "tradingFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "referralReturnFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "referralParentReturnFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "referralDiscountRate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct IConfigurable.MarketFeeRateConfig",
        name: "feeRateCfg",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "maxPriceImpactLiquidity",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "liquidationVertexIndex",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "balanceRate",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "premiumRate",
                type: "uint32",
              },
            ],
            internalType: "struct IConfigurable.VertexConfig[10]",
            name: "vertices",
            type: "tuple[10]",
          },
        ],
        indexed: false,
        internalType: "struct IConfigurable.MarketPriceConfig",
        name: "priceCfg",
        type: "tuple",
      },
    ],
    name: "MarketConfigEnabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IMarketDescriptor",
        name: "market",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "tradingFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "protocolFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "referralReturnFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "referralParentReturnFeeRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "referralDiscountRate",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct IConfigurable.MarketFeeRateConfig",
        name: "newCfg",
        type: "tuple",
      },
    ],
    name: "MarketFeeRateConfigChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IMarketDescriptor",
        name: "market",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "maxPriceImpactLiquidity",
            type: "uint128",
          },
          {
            internalType: "uint8",
            name: "liquidationVertexIndex",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "balanceRate",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "premiumRate",
                type: "uint32",
              },
            ],
            internalType: "struct IConfigurable.VertexConfig[10]",
            name: "vertices",
            type: "tuple[10]",
          },
        ],
        indexed: false,
        internalType: "struct IConfigurable.MarketPriceConfig",
        name: "newCfg",
        type: "tuple",
      },
    ],
    name: "MarketPriceConfigChanged",
    type: "event",
  },
] as const;

const _bytecode =
  "0x6080806040523461001c57611cbf90816100228239308160080152f35b600080fdfe608080604052307f00000000000000000000000000000000000000000000000000000000000000001490600436101561003757600080fd5b60003560e01c90816374020d25146113e057508063cbbad83a14610fc5578063d078727b14610c2f5763e3fee30a1461006f57600080fd5b6109ad576105207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126109ad576100a6611770565b6104e07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc3601126109ad5773ffffffffffffffffffffffffffffffffffffffff811660005260043560205263ffffffff60406000205460401c16610be85761010c6119f5565b6101c43563ffffffff811681036109ad576305f5e10063ffffffff821611610bb15763ffffffff6101e435166101e435036109ad576305f5e10063ffffffff6101e4351611610b785763ffffffff610204351661020435036109ad576305f5e10063ffffffff610204351611610b3f5763ffffffff610224351661022435036109ad576305f5e10063ffffffff610224351611610b065763ffffffff610244351661024435036109ad576305f5e10063ffffffff610244351611610acd576305f5e1006101fd63ffffffff61022435166101f863ffffffff610204351663ffffffff6101e435166119b9565b6119b9565b11610a765761026435916fffffffffffffffffffffffffffffffff831683036109ad576fffffffffffffffffffffffffffffffff831615610a335760ff610284351661028435036109ad57600960ff610284351610156109fd576102a43563ffffffff811681036109ad5763ffffffff16158015906109e3575b6109b25760025b600a60ff821610156103b757600a60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff830116101561038857613fc06006817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8401821b1691836102f3846102a40161182f565b921b169063ffffffff8061030a846102a40161182f565b1691161191821561035b575b50506103275760010160ff1661027e565b60249060ff604051917fd966b863000000000000000000000000000000000000000000000000000000008352166004820152fd5b63ffffffff91925061037d82916103766102c480920161182f565b940161182f565b169116113880610316565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b50826104e43563ffffffff81168091036109ad576305f5e10010801561098f575b61095e5773ffffffffffffffffffffffffffffffffffffffff8216600052600435602052604060002067ffffffffffffffff610412611871565b167fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000825416178155610482610445611793565b82547fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff1660409190911b6bffffffff000000000000000016178255565b6104ce61048d6117a6565b82547fffffffffffffffffffffffffffffffff00000000ffffffffffffffffffffffff1660609190911b6fffffffff00000000000000000000000016178255565b6104d6611888565b81547bffffffff0000000000000000000000000000000000000000000000006104fd6117b9565b916fffffffffffffffffffffffffffffffff77ffffffffffffffff000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000006105516117cc565b60e01b169560801b169116179160c01b1617178155600181016fffffffffffffffffffffffffffffffff610583611851565b167fffffffffffffffffffffffffffffffff000000000000000000000000000000008254161781556105fb6105b66117df565b82547fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff1660809190911b73ffffffff0000000000000000000000000000000016178255565b6106036117f3565b815473ffffffffffffffffffffffffffffffffffffffff77ffffffff00000000000000000000000000000000000000007fffffffffffffffff00000000000000000000000000000000000000000000000061065c61189f565b60c01b169360a01b1691161717905560028101906106eb63ffffffff610680611807565b16927fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000093848254161781556106b361181b565b7fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff67ffffffff0000000083549260201b169116179055565b60038101805473ffffffff000000000000000000000000000000006102443560801b167fffffffffffffffffffffffff00000000000000000000000000000000ffffffff9185169190911663ffffffff88161767ffffffff000000006101e43560201b16176bffffffff00000000000000006102043560401b16176fffffffff0000000000000000000000006102243560601b16171790556004810180547fffffffffffffffffffffffffffffff0000000000000000000000000000000000166fffffffffffffffffffffffffffffffff8516176102843560801b70ff00000000000000000000000000000000161790556000906005016102a45b600a83106108ee57604051866fffffffffffffffffffffffffffffffff8763ffffffff8b610813866118b7565b1661018085015263ffffffff6101e43581166101a08601526102043581166101c08601526102243581166101e086015261024435166102008501521661022083015260ff61028435166102408301526102a4600061026084015b600a82106108b45773ffffffffffffffffffffffffffffffffffffffff84167f7264f0e8fafa2add587b8079104a5bbb2f33dd7a7857dbfd058e41afe0bc57c86104e087a2005b60408060019263ffffffff6108c887611840565b16815263ffffffff6108dc60208801611840565b1660208201520193019101909161086d565b600160408263ffffffff610902849561182f565b16878654161785556109526109196020830161182f565b86547fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff1660209190911b67ffffffff0000000016178655565b019201920191906107e6565b60246040517fd966b86300000000000000000000000000000000000000000000000000000000815260096004820152fd5b506105043563ffffffff81168091036109ad576305f5e100106103d8565b600080fd5b60246040517fd966b86300000000000000000000000000000000000000000000000000000000815260006004820152fd5b506102c43563ffffffff81168091036109ad571515610277565b60246040517f670e612a00000000000000000000000000000000000000000000000000000000815260ff61028435166004820152fd5b6024836fffffffffffffffffffffffffffffffff604051917f8bd2b3bc000000000000000000000000000000000000000000000000000000008352166004820152fd5b60646040517ff8bc5ec200000000000000000000000000000000000000000000000000000000815263ffffffff6101e43516600482015263ffffffff6102043516602482015263ffffffff61022435166044820152fd5b60246040517fdcfaf03200000000000000000000000000000000000000000000000000000000815263ffffffff61024435166004820152fd5b60246040517fb7dd745300000000000000000000000000000000000000000000000000000000815263ffffffff61022435166004820152fd5b60246040517f888ef04e00000000000000000000000000000000000000000000000000000000815263ffffffff61020435166004820152fd5b60246040517f49cf0e8700000000000000000000000000000000000000000000000000000000815263ffffffff6101e435166004820152fd5b60249063ffffffff604051917fa9703c57000000000000000000000000000000000000000000000000000000008352166004820152fd5b60249073ffffffffffffffffffffffffffffffffffffffff604051917f56c2b59a000000000000000000000000000000000000000000000000000000008352166004820152fd5b506109ad576101c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126109ad57610c67611770565b610180807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc3601126109ad5773ffffffffffffffffffffffffffffffffffffffff8092169182600052600435602052604060002080549163ffffffff92838160401c1615610f9457610f859277ffffffffffffffff000000000000000000000000000000007f200816bf155efcd20edc2d79c9ee96b43b2330300a4866b91645eec69e9d48b0969593600293610d1b6119f5565b7fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000067ffffffffffffffff610d4d611871565b169116178355610d9b610d5e611793565b84547fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff1660409190911b6bffffffff000000000000000016178455565b610de7610da66117a6565b84547fffffffffffffffffffffffffffffffff00000000ffffffffffffffffffffffff1660609190911b6fffffffff00000000000000000000000016178455565b610def611888565b83547bffffffff000000000000000000000000000000000000000000000000610e166117b9565b917fffffffff00000000000000000000000000000000000000000000000000000000610e406117cc565b60e01b16936fffffffffffffffffffffffffffffffff96879160801b169116179160c01b16171783556001830191610e76611851565b167fffffffffffffffffffffffffffffffff00000000000000000000000000000000835416178255610eee610ea96117df565b83547fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff1660809190911b73ffffffff0000000000000000000000000000000016178355565b610ef66117f3565b9082549077ffffffff00000000000000000000000000000000000000007fffffffffffffffff000000000000000000000000000000000000000000000000610f3c61189f565b60c01b169360a01b169116171790550190610f55611807565b167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000008254161781556106b361181b565b604051610f91816118b7565ba2005b602486604051907f2215cda70000000000000000000000000000000000000000000000000000000082526004820152fd5b506109ad576103007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126109ad57610ffd611770565b6102c090817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc3601126109ad5773ffffffffffffffffffffffffffffffffffffffff168060005260209060043560205260406000209063ffffffff9283835460401c16156113af57604435936fffffffffffffffffffffffffffffffff85168095036109ad57841561137e576064359260ff9660ff8516968786036109ad57600988101561134d576084946084358581168091036109ad5715801590611338575b6109b25760025b8a8116600a80821015611199577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8301908d82161015610388578888613fc092818061112986600694851b16968961111e89890161182f565b951b1680960161182f565b16911611928315611178575b50505061114757506001018a166110c5565b602490604051907fd966b8630000000000000000000000000000000000000000000000000000000082526004820152fd5b8192935061118d9061037660a480920161182f565b16911611388881611135565b50505084908989896102c4358581168091036109ad576305f5e100809111908115611321575b5061095e576004820190867fffffffffffffffffffffffffffffff000000000000000000000000000000000070ff0000000000000000000000000000000084549360801b16921617179055600560849101906000905b600a821061129657505050604051938452602084015260408301906084906000925b600a841061126657877f49a3eacd29a2f769498211c31f9bd6c26f45be92cfeb72a926cabe70604c73d38888a2005b6040806001928761127687611840565b16815287611285868801611840565b168582015201930193019291611237565b6001604082886112a6849561182f565b167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000008754161786556113156112dc89830161182f565b87547fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff1660209190911b67ffffffff0000000016178755565b01930191019091611215565b90506102e4358681168091036109ad5711896111bf565b5060a4358581168091036109ad5715156110be565b602488604051907f670e612a0000000000000000000000000000000000000000000000000000000082526004820152fd5b602485604051907f8bd2b3bc0000000000000000000000000000000000000000000000000000000082526004820152fd5b602482604051907f2215cda70000000000000000000000000000000000000000000000000000000082526004820152fd5b826109ad5760e07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126109ad57611417611770565b60a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc3601126109ad5773ffffffffffffffffffffffffffffffffffffffff16908160005260043560205260406000209063ffffffff9081835460401c16156117425750604435918183168093036109ad576305f5e10090818411611711576064358381168091036109ad578281116116e057608435918483168093036109ad578383116116af5760a43590858216948583036109ad5780861161167e5760c4359687168097036109ad5780871161164d576114f7866101f887876119b9565b1161161057916115f360a09694926115a760037f5442af24107dc24550e28719e7d1429c52e05fd4da8a5773db8fa908a1f8b74d9a98960191887fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000084541617835561159c611563611793565b84547fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff1660209190911b67ffffffff0000000016178455565b61048d610d5e6117a6565b6115af6117b9565b7fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff73ffffffff0000000000000000000000000000000083549260801b169116179055565b6040519485526020850152604084015260608301526080820152a2005b6064838686604051927ff8bc5ec2000000000000000000000000000000000000000000000000000000008452600484015260248301526044820152fd5b602487604051907fdcfaf0320000000000000000000000000000000000000000000000000000000082526004820152fd5b602486604051907fb7dd74530000000000000000000000000000000000000000000000000000000082526004820152fd5b602483604051907f888ef04e0000000000000000000000000000000000000000000000000000000082526004820152fd5b602490604051907f49cf0e870000000000000000000000000000000000000000000000000000000082526004820152fd5b602484604051907fa9703c570000000000000000000000000000000000000000000000000000000082526004820152fd5b80847f2215cda700000000000000000000000000000000000000000000000000000000602493526004820152fd5b6024359073ffffffffffffffffffffffffffffffffffffffff821682036109ad57565b60643563ffffffff811681036109ad5790565b60843563ffffffff811681036109ad5790565b60c43563ffffffff811681036109ad5790565b60e43563ffffffff811681036109ad5790565b6101243563ffffffff811681036109ad5790565b6101443563ffffffff811681036109ad5790565b6101843563ffffffff811681036109ad5790565b6101a43563ffffffff811681036109ad5790565b3563ffffffff811681036109ad5790565b359063ffffffff821682036109ad57565b610104356fffffffffffffffffffffffffffffffff811681036109ad5790565b60443567ffffffffffffffff811681036109ad5790565b60a43567ffffffffffffffff811681036109ad5790565b6101643567ffffffffffffffff811681036109ad5790565b6044359067ffffffffffffffff918281168091036109ad5781526064359163ffffffff928381168091036109ad5760208301526084358381168091036109ad57604083015260a4358181168091036109ad57606083015260c4358381168091036109ad57608083015260e4358381168091036109ad5760a0830152610104356fffffffffffffffffffffffffffffffff81168091036109ad5760c0830152610124358381168091036109ad5760e0830152610144358381168091036109ad57610100830152610164359081168091036109ad57610120820152610184358281168091036109ad576101408201526101a4359182168092036109ad576101600152565b919082018092116119c657565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60643563ffffffff908181168091036109ad578015611c5857506084358181168091036109ad576305f5e10090818111611c27575060c4358281168091036109ad578015611bf6575060e4358281168091036109ad57818111611bc55750610104356fffffffffffffffffffffffffffffffff81168091036109ad578015611b945750610124358281168091036109ad578015611b635750610144358281168091036109ad57818111611b325750610184358281168091036109ad57818111611b0157506101a4359182168092036109ad578111611ad05750565b602490604051907f826616c50000000000000000000000000000000000000000000000000000000082526004820152fd5b602490604051907fb9371df30000000000000000000000000000000000000000000000000000000082526004820152fd5b602490604051907fda63cde30000000000000000000000000000000000000000000000000000000082526004820152fd5b602490604051907f265fd3740000000000000000000000000000000000000000000000000000000082526004820152fd5b602490604051907f62deb3e50000000000000000000000000000000000000000000000000000000082526004820152fd5b602490604051907fbe960ec80000000000000000000000000000000000000000000000000000000082526004820152fd5b602490604051907f0f5f3bd70000000000000000000000000000000000000000000000000000000082526004820152fd5b602490604051907f185b17fb0000000000000000000000000000000000000000000000000000000082526004820152fd5b602490604051907fcec6a8540000000000000000000000000000000000000000000000000000000082526004820152fdfea2646970667358221220f3b8d62a388ac31e7bc04b358deb0911a965657410587b4bdc214062932cef5164736f6c63430008170033";

type ConfigurableUtilConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfigurableUtilConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConfigurableUtil__factory extends ContractFactory {
  constructor(...args: ConfigurableUtilConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ConfigurableUtil & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ConfigurableUtil__factory {
    return super.connect(runner) as ConfigurableUtil__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfigurableUtilInterface {
    return new Interface(_abi) as ConfigurableUtilInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ConfigurableUtil {
    return new Contract(address, _abi, runner) as unknown as ConfigurableUtil;
  }
}
