/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IOrderBook,
  IOrderBookInterface,
} from "../../../../contracts/plugins/interfaces/IOrderBook";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "InsufficientExecutionFee",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "marketPriceX96",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "triggerMarketPriceX96",
        type: "uint160",
      },
    ],
    name: "InvalidMarketPriceToTrigger",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "tradePriceX96",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "acceptableTradePriceX96",
        type: "uint160",
      },
    ],
    name: "InvalidTradePrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
    ],
    name: "OrderNotExists",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeReceiver",
        type: "address",
      },
    ],
    name: "DecreaseOrderCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IMarketDescriptor",
        name: "market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "Side",
        name: "side",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "marginDelta",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "sizeDelta",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint160",
        name: "triggerMarketPriceX96",
        type: "uint160",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "triggerAbove",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint160",
        name: "acceptableTradePriceX96",
        type: "uint160",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "executionFee",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
    ],
    name: "DecreaseOrderCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint160",
        name: "marketPriceX96",
        type: "uint160",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "feeReceiver",
        type: "address",
      },
    ],
    name: "DecreaseOrderExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint160",
        name: "triggerMarketPriceX96",
        type: "uint160",
      },
      {
        indexed: false,
        internalType: "uint160",
        name: "acceptableTradePriceX96",
        type: "uint160",
      },
    ],
    name: "DecreaseOrderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "feeReceiver",
        type: "address",
      },
    ],
    name: "IncreaseOrderCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IMarketDescriptor",
        name: "market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "Side",
        name: "side",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "marginDelta",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "sizeDelta",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint160",
        name: "triggerMarketPriceX96",
        type: "uint160",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "triggerAbove",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint160",
        name: "acceptableTradePriceX96",
        type: "uint160",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "executionFee",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
    ],
    name: "IncreaseOrderCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint160",
        name: "marketPriceX96",
        type: "uint160",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "feeReceiver",
        type: "address",
      },
    ],
    name: "IncreaseOrderExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint160",
        name: "triggerMarketPriceX96",
        type: "uint160",
      },
      {
        indexed: false,
        internalType: "uint160",
        name: "acceptableTradePriceX96",
        type: "uint160",
      },
    ],
    name: "IncreaseOrderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "minExecutionFee",
        type: "uint256",
      },
    ],
    name: "MinExecutionFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    name: "OrderExecutorUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "feeReceiver",
        type: "address",
      },
    ],
    name: "cancelDecreaseOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "decreaseOrderIndexes",
        type: "uint256[]",
      },
    ],
    name: "cancelDecreaseOrdersBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "feeReceiver",
        type: "address",
      },
    ],
    name: "cancelIncreaseOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "increaseOrderIndexes",
        type: "uint256[]",
      },
    ],
    name: "cancelIncreaseOrdersBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "increaseOrderIndexes",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "decreaseOrderIndexes",
        type: "uint256[]",
      },
    ],
    name: "cancelOrdersBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "market",
        type: "address",
      },
      {
        internalType: "Side",
        name: "side",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "marginDelta",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "sizeDelta",
        type: "uint128",
      },
      {
        internalType: "uint160",
        name: "triggerMarketPriceX96",
        type: "uint160",
      },
      {
        internalType: "bool",
        name: "triggerAbove",
        type: "bool",
      },
      {
        internalType: "uint160",
        name: "acceptableTradePriceX96",
        type: "uint160",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "createDecreaseOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "market",
        type: "address",
      },
      {
        internalType: "Side",
        name: "side",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "marginDelta",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "sizeDelta",
        type: "uint128",
      },
      {
        internalType: "uint160",
        name: "triggerMarketPriceX96",
        type: "uint160",
      },
      {
        internalType: "bool",
        name: "triggerAbove",
        type: "bool",
      },
      {
        internalType: "uint160",
        name: "acceptableTradePriceX96",
        type: "uint160",
      },
    ],
    name: "createIncreaseOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "market",
        type: "address",
      },
      {
        internalType: "Side",
        name: "side",
        type: "uint8",
      },
      {
        internalType: "uint128[2]",
        name: "marginDeltas",
        type: "uint128[2]",
      },
      {
        internalType: "uint128[2]",
        name: "sizeDeltas",
        type: "uint128[2]",
      },
      {
        internalType: "uint160[2]",
        name: "triggerMarketPriceX96s",
        type: "uint160[2]",
      },
      {
        internalType: "uint160[2]",
        name: "acceptableTradePriceX96s",
        type: "uint160[2]",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "createTakeProfitAndStopLossOrders",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "feeReceiver",
        type: "address",
      },
    ],
    name: "executeDecreaseOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "feeReceiver",
        type: "address",
      },
    ],
    name: "executeIncreaseOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "triggerMarketPriceX96",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "acceptableTradePriceX96",
        type: "uint160",
      },
    ],
    name: "updateDecreaseOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "executionGasLimit",
        type: "uint256",
      },
    ],
    name: "updateExecutionGasLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "triggerMarketPriceX96",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "acceptableTradePriceX96",
        type: "uint160",
      },
    ],
    name: "updateIncreaseOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minExecutionFee",
        type: "uint256",
      },
    ],
    name: "updateMinExecutionFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    name: "updateOrderExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IOrderBook__factory {
  static readonly abi = _abi;
  static createInterface(): IOrderBookInterface {
    return new Interface(_abi) as IOrderBookInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IOrderBook {
    return new Contract(address, _abi, runner) as unknown as IOrderBook;
  }
}
