/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Router,
  RouterInterface,
} from "../../../contracts/plugins/Router";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEFC",
        name: "_EFC",
        type: "address",
      },
      {
        internalType: "contract IMarketManager",
        name: "_marketManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerUnauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "Forbidden",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
    ],
    name: "LiquidatorAlreadyRegistered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
    ],
    name: "LiquidatorNotRegistered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "expectedOwner",
        type: "address",
      },
    ],
    name: "OwnerMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "plugin",
        type: "address",
      },
    ],
    name: "PluginAlreadyApproved",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "plugin",
        type: "address",
      },
    ],
    name: "PluginAlreadyRegistered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "plugin",
        type: "address",
      },
    ],
    name: "PluginNotApproved",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "plugin",
        type: "address",
      },
    ],
    name: "PluginNotRegistered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousGov",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newGov",
        type: "address",
      },
    ],
    name: "ChangeGovStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousGov",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newGov",
        type: "address",
      },
    ],
    name: "GovChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
    ],
    name: "LiquidatorRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
    ],
    name: "LiquidatorUnregistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "plugin",
        type: "address",
      },
    ],
    name: "PluginApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "plugin",
        type: "address",
      },
    ],
    name: "PluginRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "plugin",
        type: "address",
      },
    ],
    name: "PluginRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "plugin",
        type: "address",
      },
    ],
    name: "PluginUnregistered",
    type: "event",
  },
  {
    inputs: [],
    name: "EFC",
    outputs: [
      {
        internalType: "contract IEFC",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptGov",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_plugin",
        type: "address",
      },
    ],
    name: "approvePlugin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newGov",
        type: "address",
      },
    ],
    name: "changeGov",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "address",
        name: "_plugin",
        type: "address",
      },
    ],
    name: "isPluginApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidator",
        type: "address",
      },
    ],
    name: "isRegisteredLiquidator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketManager",
    outputs: [
      {
        internalType: "contract IMarketManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingGov",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "_market",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "Side",
        name: "_side",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "_sizeDelta",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "pluginClosePositionByLiquidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "_market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_referralToken",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "pluginCollectReferralFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "_market",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_liquidityDelta",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "pluginDecreaseLiquidationFundPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "_market",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_marginDelta",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_liquidityDelta",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "pluginDecreaseLiquidityPosition",
    outputs: [
      {
        internalType: "uint128",
        name: "marginAfter",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "_market",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "Side",
        name: "_side",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "_marginDelta",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_sizeDelta",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "pluginDecreasePosition",
    outputs: [
      {
        internalType: "uint160",
        name: "tradePriceX96",
        type: "uint160",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "_market",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_liquidityDelta",
        type: "uint128",
      },
    ],
    name: "pluginIncreaseLiquidationFundPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "_market",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "_marginDelta",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_liquidityDelta",
        type: "uint128",
      },
    ],
    name: "pluginIncreaseLiquidityPosition",
    outputs: [
      {
        internalType: "uint128",
        name: "marginAfter",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "_market",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "Side",
        name: "_side",
        type: "uint8",
      },
      {
        internalType: "uint128",
        name: "_marginDelta",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_sizeDelta",
        type: "uint128",
      },
    ],
    name: "pluginIncreasePosition",
    outputs: [
      {
        internalType: "uint160",
        name: "tradePriceX96",
        type: "uint160",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "_market",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeReceiver",
        type: "address",
      },
    ],
    name: "pluginLiquidateLiquidityPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "_market",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "Side",
        name: "_side",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_feeReceiver",
        type: "address",
      },
    ],
    name: "pluginLiquidatePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarketDescriptor",
        name: "_market",
        type: "address",
      },
    ],
    name: "pluginSampleAndAdjustFundingRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "pluginTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "pluginTransferNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidator",
        type: "address",
      },
    ],
    name: "registerLiquidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_plugin",
        type: "address",
      },
    ],
    name: "registerPlugin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "plugin",
        type: "address",
      },
    ],
    name: "registeredPlugins",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_plugin",
        type: "address",
      },
    ],
    name: "revokePlugin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidator",
        type: "address",
      },
    ],
    name: "unregisterLiquidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_plugin",
        type: "address",
      },
    ],
    name: "unregisterPlugin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c03461011457601f6120b038819003918201601f19168301916001600160401b038311848410176101195780849260409485528339810103126101145780516001600160a01b0391828216820361011457602001518281168103610114576000543360018060a01b0319821617600055604051933391167f3d1e4c3a68fed9f4f8315582b7297cf8fa264bc8e6704287603ba8c72bf05ac2600080a360a052608052611f80908161013082396080518181816119a00152611aa4015260a05181818161024c0152818161049b01528181610680015281816107760152818161087401528181610aec01528181610c8c01528181610d9901528181610f88015281816112210152818161148d0152611b2a0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c9081630cfe364214611a155750806312d43a51146119c45780631420f802146119555780631b827878146117645780631e8585901461167257806321da1cd214611580578063252408101461152d578063292b33fc146114c65780632a5a2cca146113ac57806338c74dd91461124557806341ed2c12146111d657806345b27407146110b557806351a4b38e14610fc15780635dc3d63114610ea457806360f6f14b14610e3d5780636367fade14610d235780636e43596a14610c235780637bc6729b14610b4d5780639154177714610a18578063a962ef1e1461096b578063afbb3831146108f157838163b2d0d4cd14610807578163b338444e14610708578163b676a9781461060b578163bb0c5f95146104fa57508063c171f0b0146103bc578063d3d0d999146102c85763f86786f11461015957600080fd5b346102c45760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102c457610190611bee565b91610199611c34565b6101a1611c9d565b906101aa611cad565b906101b3611ccc565b9060a4359373ffffffffffffffffffffffffffffffffffffffff968786168096036102bf578288916101e660ff95611de2565b8289519b7f04d2776d000000000000000000000000000000000000000000000000000000008d5216908b01521660248901521660448701526fffffffffffffffffffffffffffffffff809216606487015216608485015260a484015260208360c48187867f0000000000000000000000000000000000000000000000000000000000000000165af19283156102b55760209493610286575b505191168152f35b6102a7919350843d86116102ae575b61029f8183611d4d565b810190611d8e565b913861027e565b503d610295565b81513d86823e3d90fd5b600080fd5b8280fd5b5090346102c45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102c45773ffffffffffffffffffffffffffffffffffffffff610316611bee565b61031e611e46565b1691828452600360205260ff828520541661038e57508183526003602052822060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790557f147270b607bb55cce19da6ecd1569d5d71e9638c59dc52ae16f6c456a255d5998280a280f35b8260249251917f651e9669000000000000000000000000000000000000000000000000000000008352820152fd5b5090346102c45760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102c457826103f6611bee565b6103fe611c34565b610406611c9d565b9461040f611cad565b610417611c57565b90610420611e91565b73ffffffffffffffffffffffffffffffffffffffff9788809581958a519b8c997f04d2776d000000000000000000000000000000000000000000000000000000008b52169089015216602487015260ff1660448601528560648601526fffffffffffffffffffffffffffffffff1660848501521660a48301527f000000000000000000000000000000000000000000000000000000000000000016815a9360c492602095f19081156104f157506104d5575080f35b6104ed9060203d6020116102ae5761029f8183611d4d565b5080f35b513d84823e3d90fd5b929050346106075760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106075781359173ffffffffffffffffffffffffffffffffffffffff831680930361060257610555611c34565b9061055e611c11565b9361056883611de2565b803b156105fe576105d8948680948651978895869485937f42842e0e00000000000000000000000000000000000000000000000000000000855260643592850160409194939294606082019573ffffffffffffffffffffffffffffffffffffffff80921683521660208201520152565b03925af19081156104f157506105eb5750f35b6105f490611d0a565b6105fb5780f35b80fd5b8580fd5b505050fd5b5050fd5b929050346106075760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261060757610645611bee565b61064d611c34565b610655611c9d565b9161065e611c7a565b90610667611e91565b73ffffffffffffffffffffffffffffffffffffffff92837f000000000000000000000000000000000000000000000000000000000000000016803b15610704578460849460ff8b98838a968c519d8e9b8c9a7fb9e89222000000000000000000000000000000000000000000000000000000008c5216908a01521660248801521660448601521660648401525af19081156104f157506105eb5750f35b8880fd5b929050346106075760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261060757610742611bee565b61074a611c34565b90610753611ceb565b9161075d81611de2565b73ffffffffffffffffffffffffffffffffffffffff91827f00000000000000000000000000000000000000000000000000000000000000001693843b156108035787946fffffffffffffffffffffffffffffffff8692866064968a519b8c998a987f7d0c7327000000000000000000000000000000000000000000000000000000008a5216908801521660248601521660448401525af19081156104f157506105eb5750f35b8780fd5b929050346106075760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261060757610841611bee565b610849611c34565b90610852611c11565b9161085b611e91565b73ffffffffffffffffffffffffffffffffffffffff91827f00000000000000000000000000000000000000000000000000000000000000001693843b15610803578794848692816064968a519b8c998a987f3bd9a15d000000000000000000000000000000000000000000000000000000008a5216908801521660248601521660448401525af19081156104f157506105eb5750f35b50346102c457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102c4576020928261092c611bee565b91610935611c34565b9373ffffffffffffffffffffffffffffffffffffffff80941682528652209116600052825260ff81600020541690519015158152f35b83346105fb5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105fb576109a3611bee565b6109ab611e46565b73ffffffffffffffffffffffffffffffffffffffff80911690817fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001558254167fb9911e2099e372c216862258dc462bb65da46a2c854536c8b1acae619d0d62ed8380a380f35b5090346102c45760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102c457610a51611bee565b906020610a5c611c34565b926084610a67611ceb565b9187610a71611cad565b96610a7b81611de2565b73ffffffffffffffffffffffffffffffffffffffff9485809289519b8c9889977f7e882abf00000000000000000000000000000000000000000000000000000000895216908701521660248501526fffffffffffffffffffffffffffffffff988980921660448601521660648401527f0000000000000000000000000000000000000000000000000000000000000000165af19283156102b55760209493610b2557505191168152f35b6102a7919350843d8611610b46575b610b3e8183611d4d565b810190611dba565b503d610b34565b5090346102c457827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102c4576001549173ffffffffffffffffffffffffffffffffffffffff918284163303610bfd5750507fffffffffffffffffffffffff0000000000000000000000000000000000000000809216600155825491339083161783553391167f3d1e4c3a68fed9f4f8315582b7297cf8fa264bc8e6704287603ba8c72bf05ac28380a380f35b517fee90c468000000000000000000000000000000000000000000000000000000008152fd5b50829034610d1f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610d1f57610c5d611bee565b92338352600260205260ff818420541615610cf957829373ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016803b156105fe57859283602492865197889586947f43f59a8200000000000000000000000000000000000000000000000000000000865216908401525af19081156104f157506105eb5750f35b517f2b6dd476000000000000000000000000000000000000000000000000000000008152fd5b5080fd5b5090346102c45760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102c45782610d5d611bee565b610d65611c34565b610d6d611ceb565b91610d76611c7a565b91610d8081611de2565b73ffffffffffffffffffffffffffffffffffffffff93847f00000000000000000000000000000000000000000000000000000000000000001690813b15610e39576084946fffffffffffffffffffffffffffffffff8792838a968c519d8e9b8c9a7f67431bd0000000000000000000000000000000000000000000000000000000008c5216908a01521660248801521660448601521660648401525af19081156104f15750610e2d575080f35b610e3690611d0a565b80f35b8680fd5b505034610d1f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610d1f5760ff8160209373ffffffffffffffffffffffffffffffffffffffff610e91611bee565b1681526003855220541690519015158152f35b5090346102c45760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102c457610edd611bee565b906020610ee8611c34565b60a4610ef2611ceb565b9487610efc611cad565b96610f05611c57565b94610f0f81611de2565b73ffffffffffffffffffffffffffffffffffffffff9586928380938b519d8e9a8b997fa47fc0e2000000000000000000000000000000000000000000000000000000008b5216908901521660248701526fffffffffffffffffffffffffffffffff9a8b80921660448801521660648601521660848401527f0000000000000000000000000000000000000000000000000000000000000000165af19283156102b55760209493610b2557505191168152f35b5090346102c45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102c45773ffffffffffffffffffffffffffffffffffffffff61100f611bee565b611017611e46565b1691828452600260205260ff828520541661108757508183526002602052822060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790557f03cab74d2fa2a557ffeb0fd712180cfbea66cb894cf67fcf8a25b38b9ec5ad968280a280f35b8260249251917f5a473fa1000000000000000000000000000000000000000000000000000000008352820152fd5b5090346102c45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102c4576110ee611bee565b91338452806020528184209273ffffffffffffffffffffffffffffffffffffffff81169384865260205260ff838620541615611184575033845260205280832082845260205282207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008154169055337f15bb2b66587c2cebf2c9db7dc18211188c4c21b135dee66e2e66309c2e696d518380a380f35b91517ffb96919d0000000000000000000000000000000000000000000000000000000081523391810191825273ffffffffffffffffffffffffffffffffffffffff909216602082015281906040010390fd5b505034610d1f57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610d1f576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5090346102c4576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126113a85761127f611bee565b923385528082528285209373ffffffffffffffffffffffffffffffffffffffff811694858752835260ff848720541661135557508385526002825260ff8386205416156113265733855281528184209083855252822060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825416179055337f66075e2684e8cbbd5dd40f4ecfa3cb7e9903d1b492d8484496b579070dd080b48380a380f35b602490848451917f69711629000000000000000000000000000000000000000000000000000000008352820152fd5b83517fa7ed43a10000000000000000000000000000000000000000000000000000000081523392810192835273ffffffffffffffffffffffffffffffffffffffff90911660208301529081906040010390fd5b8380fd5b50346102c45760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102c4576113e4611bee565b916113ed611c34565b916113f6611c9d565b9060ff611401611cad565b9261140a611ccc565b9261141487611de2565b73ffffffffffffffffffffffffffffffffffffffff9687918288519a7fe0e20624000000000000000000000000000000000000000000000000000000008c5216908a01521660248801521660448601526fffffffffffffffffffffffffffffffff809216606486015216608484015260208360a48187867f0000000000000000000000000000000000000000000000000000000000000000165af19283156102b5576020949361028657505191168152f35b505034610d1f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610d1f5760ff8160209373ffffffffffffffffffffffffffffffffffffffff61151a611bee565b1681526002855220541690519015158152f35b505034610d1f57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610d1f5760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b5090346102c45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102c45773ffffffffffffffffffffffffffffffffffffffff6115ce611bee565b6115d6611e46565b1691828452600260205260ff8285205416156116445750818352600260205282207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541690557f252f5031a1dead704da844140b2a6a3069c71c2f4f6f0668b5880bc3e7befb708280a280f35b8260249251917f69711629000000000000000000000000000000000000000000000000000000008352820152fd5b5090346102c45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102c45773ffffffffffffffffffffffffffffffffffffffff6116c0611bee565b6116c8611e46565b1691828452600360205260ff8285205416156117365750818352600360205282207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541690557f52286fa80e275941d688cacab4ad042c210df07a6c25274969de789f971b94c88280a280f35b8260249251917fb4e32dd3000000000000000000000000000000000000000000000000000000008352820152fd5b5090346102c45760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102c45781359073ffffffffffffffffffffffffffffffffffffffff82168092036113a85761183784806117c3611c34565b6117cb611c11565b906117d581611de2565b85517f23b872dd000000000000000000000000000000000000000000000000000000006020820190815273ffffffffffffffffffffffffffffffffffffffff928316602483015292909116604482015260648035908201529384906084820190565b03936118697fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe095868101835282611d4d565b519082875af13d15611948573d67ffffffffffffffff811161191c57906118af929161189f6020865194601f8401160184611d4d565b82523d87602084013e5b84611eaa565b80519081151591826118f4575b50506118c6578380f35b6024935051917f5274afe7000000000000000000000000000000000000000000000000000000008352820152fd5b819250906020918101031261191857602001518015908115036119185738806118bc565b8480fd5b6024876041887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6118af91506060906118a9565b505034610d1f57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610d1f576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b505034610d1f57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610d1f5773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b848484346102c45760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102c457611a4f611bee565b60243590611a5b611c11565b73ffffffffffffffffffffffffffffffffffffffff927f6352211e00000000000000000000000000000000000000000000000000000000885280858901526020978881602481887f0000000000000000000000000000000000000000000000000000000000000000165afa908115611be45791899594939189938491611b9f575b5060649493928692611aee8493611de2565b8a51998a9889977f618bb173000000000000000000000000000000000000000000000000000000008952169087015260248601521660448401527f0000000000000000000000000000000000000000000000000000000000000000165af1928315611b94578093611b62575b505051908152f35b909192508382813d8311611b8d575b611b7b8183611d4d565b810103126105fb575051908380611b5a565b503d611b71565b8251903d90823e3d90fd5b92949596809294508391503d8311611bdd575b611bbc8183611d4d565b81010312610803575184811681036108035788949392889290916064611adc565b503d611bb2565b87513d8a823e3d90fd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036102bf57565b6044359073ffffffffffffffffffffffffffffffffffffffff821682036102bf57565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036102bf57565b6084359073ffffffffffffffffffffffffffffffffffffffff821682036102bf57565b6064359073ffffffffffffffffffffffffffffffffffffffff821682036102bf57565b6044359060ff821682036102bf57565b606435906fffffffffffffffffffffffffffffffff821682036102bf57565b608435906fffffffffffffffffffffffffffffffff821682036102bf57565b604435906fffffffffffffffffffffffffffffffff821682036102bf57565b67ffffffffffffffff8111611d1e57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117611d1e57604052565b908160209103126102bf575173ffffffffffffffffffffffffffffffffffffffff811681036102bf5790565b908160209103126102bf57516fffffffffffffffffffffffffffffffff811681036102bf5790565b73ffffffffffffffffffffffffffffffffffffffff16600052600460205260406000203360005260205260ff6040600020541615611e1c57565b60046040517f2b6dd476000000000000000000000000000000000000000000000000000000008152fd5b73ffffffffffffffffffffffffffffffffffffffff600054163303611e6757565b60046040517fee90c468000000000000000000000000000000000000000000000000000000008152fd5b33600052600360205260ff6040600020541615611e1c57565b90611ee95750805115611ebf57805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580611f41575b611efa575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b15611ef256fea2646970667358221220c95967e3720d564d99d79362e8942ce6fdda8766030b7630d6f8bd8f24ce2b0164736f6c63430008170033";

type RouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Router__factory extends ContractFactory {
  constructor(...args: RouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _EFC: AddressLike,
    _marketManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_EFC, _marketManager, overrides || {});
  }
  override deploy(
    _EFC: AddressLike,
    _marketManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_EFC, _marketManager, overrides || {}) as Promise<
      Router & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Router__factory {
    return super.connect(runner) as Router__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RouterInterface {
    return new Interface(_abi) as RouterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Router {
    return new Contract(address, _abi, runner) as unknown as Router;
  }
}
