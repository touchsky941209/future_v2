/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  EquationContractsV1RewardCollectorCompatibility,
  EquationContractsV1RewardCollectorCompatibilityInterface,
} from "../../../contracts/plugins/EquationContractsV1RewardCollectorCompatibility";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "requiredCaller",
        type: "address",
      },
    ],
    name: "InvalidCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "EFC",
    outputs: [
      {
        internalType: "contract IEFC",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokenIDs",
        type: "uint256[]",
      },
    ],
    name: "collectContractsV1ArchitectRewardBatch",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPool[]",
        name: "_pools",
        type: "address[]",
      },
    ],
    name: "collectContractsV1FarmLiquidityRewardBatch",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPool[]",
        name: "_pools",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_referralTokens",
        type: "uint256[]",
      },
    ],
    name: "collectContractsV1FarmReferralRewardBatch",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "PackedValue",
        name: "_nonceAndLockupPeriod",
        type: "uint256",
      },
      {
        internalType: "PackedValue[]",
        name: "_packedPoolRewardValues",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "collectContractsV1FarmRewardBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPool[]",
        name: "_pools",
        type: "address[]",
      },
    ],
    name: "collectContractsV1FarmRiskBufferFundRewardBatch",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPool[]",
        name: "_pools",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_referralTokens",
        type: "uint256[]",
      },
    ],
    name: "collectContractsV1ReferralFeeBatch",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "collectContractsV1StakingRewardBatch",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "collectContractsV1V3PosStakingRewardBatch",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distributorV2",
    outputs: [
      {
        internalType: "contract IFarmRewardDistributorV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerV1",
    outputs: [
      {
        internalType: "contract IRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class EquationContractsV1RewardCollectorCompatibility__factory {
  static readonly abi = _abi;
  static createInterface(): EquationContractsV1RewardCollectorCompatibilityInterface {
    return new Interface(
      _abi
    ) as EquationContractsV1RewardCollectorCompatibilityInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EquationContractsV1RewardCollectorCompatibility {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as EquationContractsV1RewardCollectorCompatibility;
  }
}
